mixin infoCircle
  // The vertical-align: -0.125em is necessary. See https://github.com/twbs/icons/issues/82
  svg(xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info-circle" viewBox="0 0 16 16" style="vertical-align: -0.125em")
    path(d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z")
    path(d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z")

mixin moreInfo(title)
  span(data-bs-toggle="tooltip" data-bs-placement="top" title=title).text-success
    +infoCircle

mixin slider(id, label, min, max, step, value, unit, info=false)
  div.flex-row
    label(for=id).form-label
      = label
      if info
        +moreInfo(info)
    // https://stackoverflow.com/questions/10004723/html5-input-type-range-show-range-value
    input(id=id type="range" min=min max=max step=step value=value oninput="this.nextElementSibling.value = this.value; calculate()").form-range.w-80
    |&nbsp;
    output= value
    | !{unit}

mixin inputSelect(id, label, selected, titles, info=false, vals=false)
  label(for=id).form-label
    = label
    if info
      +moreInfo(info)
  select(id=id, onchange="calculate()").form-select.w-80.mb-2
    each title, index in titles
      - var isSelected = selected == title
      - var val = vals[index]
      if val
        option(selected= isSelected value= val)= title
      else
        option(selected= isSelected)= title

mixin discountRate
  +inputSelect(
    "discount-rate",
    "Discount rate ρ",
    "2.8% (WACC)",
    ["0%", "2.8% (WACC)", "3.6% (WACC, average risk-premium 100 years)", "5%", "8%"],
    "The discount rate is used to obtain the present value of costs of phasing out coal over 2024 to the horizon. WACC stands for the weighted average costs of capital."
  )

mixin timeHorizon
  +inputSelect(
    "time-horizon",
    "Time horizon of carbon arbitrage",
    "2100",
    ["2030", "2050", "2070", "2100"],
    "The last year in which costs are made to phase out coal."
  )

mixin timeHorizonIncluding2030
  +inputSelect(
    "time-horizon",
    "Time horizon of carbon arbitrage",
    "2100",
    ["2030", "2050", "2070", "2100"],
    "The last year in which costs are made to phase out coal."
  )

mixin cfUnitCommon(dollarUnit, info)
  +inputSelect(
    "requisite-climate-financing-unit",
    "Unit",
    dollarUnit,
    [dollarUnit, "% of GDP"],
    info
  )

mixin cfUnit(dollarUnit)
  +cfUnitCommon(dollarUnit, "Present value of climate financing needs, given by the present value of costs of phasing out coal (i.e., opportunity costs of coal and investments costs in replacement energy). This is expressed either in " + dollarUnit + " or as a percentage of GDP over [t+2,T].")

mixin cfUnitAnnual(dollarUnit)
  +cfUnitCommon(dollarUnit, "Annual climate financing needs, given by the annual costs of phasing out coal (i.e., annual opportunity costs of coal and investments costs in replacement energy). The non-discounted annual costs are expressed either in " + dollarUnit + " or as a percentage of annual GDP.")

mixin resultDataDownload(info=false)
  details
    summary
      |Result data in JSON format (click here to view online, or 
      a#download-result-data download
      |)
      if info
        +moreInfo(info)
    code#result-data

mixin resultDataDownloadCSV(info=false)
  details
    summary
      |Result data in CSV format (click here to view online, or 
      a#download-result-data download
      |)
      if info
        +moreInfo(info)
    pre#result-data

mixin energyStorage
  +inputSelect(
    "energy-storage",
    "Investment costs in energy storage",
    "Not included",
    ["Not included", "Short-term storage", "Short-term + long-term storage"]
  )

mixin opportunityCostsType
  +inputSelect(
    "opportunity-costs-type",
    "Type of opportunity costs",
    "Compensation missed cash flows of coal companies",
    ["Compensation missed cash flows of coal companies", "Compensation lost wages of coal workers", "Compensation retraining costs", "All of the above"]
  )

mixin phaseoutScenario
  +inputSelect(
    "phaseout-scenario",
    "Coal phase out scenario",
    "Net Zero 2050 (NGFS global scenario)",
    ["Net Zero 2050 (NGFS global scenario)"],
    "The pathway according to which coal is phased out. “Net Zero 2050 (NGFS global scenario)” uses a pathway developed by the Network for Greening the Financial System (NGFS) to phase out coal in line with the net zero 2050 ambitions."
  )

mixin sccSlider
  +slider("social-cost-of-carbon", "Social cost of carbon", 20, 300, 20, 80, " USD/tCO<sub>2</sub>", "The social cost of carbon is an estimate of the economic costs, or damages, of emitting one additional ton of carbon dioxide into the atmosphere, and thus the benefits of reducing emissions.")

mixin coalExport
  +inputSelect(
    "coal-export",
    "Coal export",
    "Disabled",
    ["Disabled", "Enabled"]
  )
